@using System.Globalization
@model IEnumerable<xilopro2.Data.Entities.Membership>

@{
    ViewData["Title"] = "Index";
}

<partial name="_Notifications" />
<div class="container pt-3">
    <div class="row" >
        <div class="col-md-12">
            <div class="card rounded-0">
                <div class="card-header d-flex justify-content-between align-content-center mb-2">
                    <h3 class="panel-title m-0">Membresias</h3>
                    <a asp-action="Create" asp-controller="Membership" class="btn btn-success"><i class="fa-solid fa-plus"></i> <span class="d-none d-sm-inline-block">Crear Nueva Membresia</span></a>
                </div>

                <div class="card-body">
                    <nav>
                        <div class="nav nav-tabs" id="nav-tab" role="tablist">
                            <button class="nav-link active" id="nav-home-tab" data-bs-toggle="tab" data-bs-target="#nav-home" type="button" role="tab" aria-controls="nav-home" aria-selected="true">Registros</button>
                            <button class="nav-link" id="nav-profile-tab" data-bs-toggle="tab" data-bs-target="#nav-profile" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">Estadisticas</button>
                        </div>
                    </nav>
                    <div class="tab-content" id="nav-tabContent">
                        <div class="tab-pane fade show active p-2 my-1" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab" tabindex="0">
                            @if (Model.Count() > 0)
                            {
                            //@Html.Partial("_ListPlayers", Model, new ViewDataDictionary(this.ViewData) { { "param1", true } })
                                <div class="table-responsive">
                                    <table class="table table-hover table-striped display" id="tblMemActivos">
                                        <thead>
                                            <tr>
                                                <th>
                                                    @Html.DisplayNameFor(model => model.Membership_FullName)
                                                </th>
                                                <th class="d-none d-md-table-cell">
                                                    @Html.DisplayNameFor(model => model.MembershipType)
                                                </th>
                                                <th>
                                                    @Html.DisplayNameFor(model => model.StartDate)
                                                </th>
                                                <th>
                                                    @Html.DisplayNameFor(model => model.EndDate)
                                                </th>
                                                
                                                <th class="d-none d-md-table-cell">
                                                    Pagos
                                                </th>
                                                <th class="d-none d-md-table-cell">
                                                    @Html.DisplayNameFor(model => model.Status)
                                                </th>

                                                <th class="text-end">Acciones</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model/*Where(item => item.Status == "ACTIVO")*/)
                                            {
                                                <tr>
                                                    <td style="vertical-align: middle;">
                                                        <a asp-action="Details" asp-route-id="@item.Id" class="rowclick text-uppercase">
                                                            @Html.DisplayFor(modelItem => item.Membership_FullName)
                                                        </a>
                                                    </td>
                                                    <td style="vertical-align: middle;" class="d-none d-md-table-cell">
                                                        @Html.DisplayFor(modelItem => item.MembershipType)
                                                    </td>
                                                    <td style="vertical-align: middle;" class="d-none d-md-table-cell text-uppercase">
                                                        @item.StartDate.ToString("MMMM yyyy", new CultureInfo("es-ES"))
                                                    </td>
                                                    <td style="vertical-align: middle;" class="d-none d-md-table-cell text-uppercase">
                                                        @item.EndDate.ToString("MMMM yyyy", new CultureInfo("es-ES"))
                                                    </td>
                                                    <td style="vertical-align: middle;" class="d-none d-md-table-cell">
                                                        @Html.DisplayFor(modelItem => item.PaymentsNumber)
                                                    </td>
                                                    <td style="vertical-align: middle;" class="d-none d-md-table-cell">
                                                        @if (item.Status == "ACTIVO")
                                                        {
                                                            <span class="text-success">
                                                                <i class="fa-solid fa-thumbs-up"></i> ACTIVO
                                                            </span>
                                                        }
                                                        @if (item.Status == "INACTIVO")
                                                        {
                                                            <span class="text-danger"><i class="fa-solid fa-thumbs-down"></i> INACTIVO</span>
                                                        }
                                                        else if (item.Status == "PENDIENTE")
                                                        {
                                                            <span class="text-warning"><i class="fa-solid fa-hourglass-half"></i> PENDIENTE</span>
                                                        }
                                                        else if (item.Status == "CANCELADO")
                                                        {
                                                            <span class="text-secondary"><i class="fa-solid fa-ban"></i> CANCELADO</span>
                                                        }
                                                    </td>

                                                    <td style="vertical-align: middle;" class="text-end">
                                                        <div class="btn-group">
                                                            <a asp-action="Edit" class="btn btn-warning" asp-route-id="@item.Id"><i class="fa-regular fa-pen-to-square"></i> <span class="d-none d-sm-inline-block">Editar</span></a>
                                                            <a asp-action="Delete" class="btn btn-danger" asp-route-id="@item.Id"><i class="fa-solid fa-delete-left"></i> <span class="d-none d-sm-inline-block">Eliminar</span></a>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <div class="card-body">
                                    <div class="alert alert-warning" role="alert">
                                        <i class="fa-solid fa-triangle-exclamation fa-lg me-2"></i> No hay membresias activas
                                    </div>
                                </div>
                            }

                        </div>
                        <div class="tab-pane fade p-2 my-1" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab" tabindex="0">
                            <div class="card-body">
                                <canvas id="chartMembresias" style="max-height:350px;"></canvas>
                            </div>
                        </div>



                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">
        $(document).ready(function () {
            $('#tblMemActivos').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.12.1/i18n/es-MX.json"
                },
                "aLengthMenu": [
                    [5, 25, 50, 100, 200, -1],
                    [5, 25, 50, 100, 200, "Todos"]
                ],
                dom: 'Bfrtip',

                buttons: [
                    'pageLength',
                    //columnas
                    {
                        extend: 'colvis',
                        text: 'Columnas',
                        className: 'btn-export-colvis',

                    },
                    //excel
                    {
                        extend: 'excelHtml5',
                        text: 'Exportar Excel',
                        filename: 'Jugadores',
                        title: 'Lista de Jugadores',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6]
                        },
                        className: 'btn-exportar-excel',

                    },
                    //pdf
                    {
                        extend: 'pdfHtml5',
                        text: 'Exportar PDF',
                        filename: 'Jugadores',
                        title: 'Lista de Jugadores',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6]
                        },
                        className: 'btn-exportar-pdf',
                    },
                    //print
                    {
                        extend: 'print',
                        title: 'Lista de Jugadores',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6]
                        },
                        className: 'btn-light'

                    },
                ]
            })
            cantmembresias();

            function cantmembresias() {
                fetch("Membership/membresiascant")
                    .then((response) => {
                        return response.ok ? response.json() : Promise.reject(response);
                    })
                    .then((dataJson) => {

                        const labels = dataJson.map((item) => { return item.status })
                        const values = dataJson.map((item) => { return item.count })

                            console.log('values', values);
                            console.log('dataJson', dataJson);
                        //   console.log(typeof values);

                        const data = {
                            labels: labels,
                            datasets: [{
                                label: 'Membresias',
                                data: values,//[65, 59, 80, 81, 56, 55, 40],
                                backgroundColor: [
                                    'rgba(255, 99, 132, 0.2)',
                                    'rgba(255, 159, 64, 0.2)',
                                ],
                                borderColor: [
                                    'rgb(255, 99, 132)',
                                    'rgb(255, 159, 64)',
                                ],
                                borderWidth: 1
                            }]
                        };


                        const config = {
                            type: 'bar',
                            data: data,
                            options: {
                                scales: {
                                    y: {
                                        beginAtZero: true
                                    }
                                }
                            },
                        };


                        const canvasBarras = document.getElementById("chartMembresias");
                        const graficoBarras = new Chart(canvasBarras, config);

                    }).catch((error) => {
                        console.log("error", error)

                    })
            }




        })
    </script>
}

