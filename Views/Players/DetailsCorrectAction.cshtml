@model xilopro2.Data.Entities.CorrectionAction
@{
    ViewData["Title"] = "Detalles";
    var path = "/Content/Players/";
}

<div class="container pt-3" id="detalleprint">
    <div class="d-flex justify-content-between align-items-center gap-2">
        <a asp-action="Details" asp-route-id="@Model?.PlayerId" id="btnback" class="btn btn-outline-dark"><i class="fa-solid fa-arrow-left"></i> Atras</a>
        <h2 class="m-0 text-end">Acción Disciplinaria del @(Model.Player.Player_Genero == "Masculino" ? "Jugador:" : "Jugadora:") <span class="badge bg-dark fs-4 text-uppercase">@Model.PlayerName</span></h2>
    </div>
    <hr />

    <div class="card border-dark row" style="width: 100%;margin:0 auto;">

        <div class="card-body row" >
            <div class="col-md-4 text-center">
                <div class="form-group mb-2">
                    <div class="d-flex justify-content-between">
                        <span class="mb-2 d-block">FIFA ID: <span class="text-primary fw-bold">@Model.Player.Player_fifaid</span></span>
                        <div class="estadoplayer">
                            <label class="form-check-label d-inline">Estado:</label>
                            @if (Model.Player.Player_Status)
                            {
                                <h5 class="badge bg-success d-inline">Activo</h5>
                            }
                            else
                            {
                                <h5 class="badge bg-danger d-inline">Inactivo</h5>
                            }
                        </div>
                    </div>

                    <img src="@(!string.IsNullOrEmpty(Model.Player.Player_Image) ? Url.Content(path+Model.Player.Player_Image) : Url.Content("~/images/noimage.png"))" class="img-fluid rounded imgpreviewForm2" alt="Image" />

                    <div class="d-flex justify-content-between align-items-center">
                        <span class="mb-2 ">Dorsal: <span class="text-primary fw-bold">@Model.Player.Player_Dorsal</span></span>

                        @{
                            var elemento2 = ViewBag.Cats as IEnumerable<SelectListItem>;
                            var elemento3 = elemento2.ToList().Where(e => Convert.ToInt32(e.Value) == Model.Player.SelectedCategoryIds.FirstOrDefault()).FirstOrDefault();
                            <span class="@GetBadgebyClass(elemento3.Text)"> @elemento3.Text</span>
                            @functions {
                                private string GetBadgebyClass(string text)
                                {
                                    return text switch
                                    {
                                        "MAYOR" => "badge text-bg-secondary",
                                        "U13 MASCULINO" => "badge text-bg-green",
                                        "U15 MASCULINO" => "badge text-bg-yellow",
                                        "U15 FEMENINO" => "badge text-bg-pink",
                                        "U17 MASCULINO" => "badge text-bg-blue",
                                        "U17 FEMENINO" => "badge text-bg-purple",
                                        _ => "badge", // Default case
                                    };
                                }
                            }
                        }

                    </div>

                </div>

            </div>

            <div class="col-md-2 mt-3">
                <div class="form-group mb-3">
                    <label class="control-label fw-bold mb-2">Tipo de Sanción:</label>
                    <p>@Model.CorrectionAction_Name</p>
                </div>
                <div class="form-group mb-3">
                    <label class="control-label fw-bold mb-2">Fecha:</label>
                    <p>@Model.Fecha</p>
                </div>
            </div>

            <div class="col-md-6 mt-3">
                <div class="form-group mb-3" >
                    <label class="control-label fw-bold mb-2">Descripción:</label>
                     <p>@Model.Description</p>
                </div>
            </div>
        </div>

        <div class="card-footer card-footer-dark" id="footercard"  >
            <div class="form-group my-2 d-flex justify-content-between">
                <a asp-action="Details" asp-route-id="@Model?.PlayerId" class="btn btn-light"><i class="fa-solid fa-ban"></i> Cancelar</a>
                <div class="btn-group">
                    <button id="btnPrint" class="btn btn-light"><i class="fa-regular fa-file-pdf"></i> PDF</button>
                    <a asp-action="EditCorrectAction" asp-route-id="@Model.CorrectionAction_ID" class="btn btn-warning"><i class="fa-regular fa-pen-to-square"></i> Editar</a>
                    <a asp-action="DeleteCorrectAction" asp-route-id="@Model.CorrectionAction_ID" class="btn btn-danger"><i class="fa-solid fa-delete-left"></i> Borrar</a>
                </div>

            </div>
        </div>
    </div>

    <hr />


</div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js" integrity="sha512-GsLlZN/3F2ErC5ifS5QtgpiJtWd43JWSuIgh7mbzZ8zBps+dvLusV+eNQATqgA/HdeKFVgA5v3S/cIrLF7QnIg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script type="text/javascript">
    let container = document.getElementById('detalleprint'); 
    let btnback = document.getElementById('btnback');
    let footercard = document.getElementById('footercard');
    let btnPrint = document.getElementById('btnPrint');

    btnPrint.addEventListener('click', () => {
        btnback.style.display = "none";
        footercard.style.display = "none";
        var opt = {
            margin: 1,
            filename: 'sancion.pdf',
            image: { type: 'jpeg', quality: 0.98 },
            html2canvas: { scale: 2 },
            jsPDF: { unit: 'cm', format: 'letter', orientation: 'landscape' }
        };
        html2pdf().set(opt).from(container).save().then(
            function (pdf) {
                btnback.style.display = "block";
                footercard.style.display = "block";
            },
            function () {

                //Error Here

            });

     
    })
</script>