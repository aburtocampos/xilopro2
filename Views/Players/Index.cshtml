@model IEnumerable<xilopro2.Data.Entities.Player>
@using System.Linq

@{
    ViewData["Title"] = "Index";
    var path = "/Content/Players/";
}


<div class="container pt-3">
   <div class="row" >
        <div class="col-md-12">
            <div class="card rounded-0">
                <div class="card-header d-flex justify-content-between align-content-center mb-2">
                    <h3 class="">Jugadores</h3>
                    <a asp-action="Create" class="btn btn-success"><i class="fa-solid fa-plus"></i> Crear Nuevo Jugador</a>
                </div>
                <div class="card-body p-2">

                    <nav>
                        <div class="nav nav-tabs" id="nav-tab" role="tablist">
                            <button class="nav-link active" id="nav-home-tab" data-bs-toggle="tab" data-bs-target="#nav-home" type="button" role="tab" aria-controls="nav-home" aria-selected="true">Activos</button>
                            <button class="nav-link" id="nav-profile-tab" data-bs-toggle="tab" data-bs-target="#nav-profile" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">Inactivos</button>
                        </div>
                    </nav>
                    <div class="tab-content" id="nav-tabContent">

                        <div class="tab-pane fade show active p-2 my-1" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab" tabindex="0">
                            @if (Model.Count(item => item.Player_Status) > 0)
                            {
                            //@Html.Partial("_ListPlayers", Model, new ViewDataDictionary(this.ViewData) { { "param1", true } })
                                <div class="table-responsive">
                                    <table class="table table-hover table-striped" id="tblPlayersActivos">
                                        <thead>
                                            <tr>
                                                <td class="fw-bold">
                                                    @Html.DisplayNameFor(model => model.Player_Image)
                                                </td>
                                                <td class="fw-bold">
                                                    @Html.DisplayNameFor(model => model.Player_Dorsal)
                                                </td>
                                                <th class="fw-bold">
                                                    @Html.DisplayNameFor(model => model.Player_FullName)
                                                </th>
                                                <td class="fw-bold">
                                                    @Html.DisplayNameFor(model => model.Player_FNC)
                                                </td>
                                                <td class="fw-bold">
                                                    @Html.DisplayNameFor(model => model.Position.Position_Name)
                                                </td>
                                                <td class="fw-bold">
                                                    @Html.DisplayName("Categoria")
                                                </td>
                                                <td class="fw-bold">
                                                    @Html.DisplayNameFor(model => model.Player_Status)
                                                </td>
                                                <th class="text-end fw-bold">Acciones</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.Where(item => item.Player_Status == true))
                                            {
                                                <tr>
                                                    <td style="vertical-align: middle;" class="imgZoom">
                                                        <a asp-action="Details" asp-route-id="@item.Player_ID" class="rowclick">
                                                            <img src="@(!string.IsNullOrEmpty(item.Player_Image) ? Url.Content(path+item.Player_Image) : Url.Content("~/images/noimage.png"))" alt="Image" class="rounded" />
                                                        </a>
                                                    </td>
                                                    <td style="vertical-align: middle;">
                                                        @Html.DisplayFor(modelItem => item.Player_Dorsal)
                                                    </td>
                                                    <td style="vertical-align: middle;text-transform:uppercase;">
                                                        <a asp-action="Details" asp-route-id="@item.Player_ID" class="rowclick">
                                                            @Html.DisplayFor(modelItem => item.Player_FullName)
                                                        </a>
                                                    </td>
                                                    <td style="vertical-align: middle;">
                                                        @Html.DisplayFor(modelItem => item.Player_FNC) |
                                                        (@Html.DisplayFor(modelItem => item.Player_Edad) años)
                                                    </td>
                                                    <td style="vertical-align: middle;">
                                                        @Html.DisplayFor(modelItem => item.Position.Position_Name)
                                                    </td>
                                                    <td style="vertical-align: middle;">
                                                        @{
                                                            var elemento2 = ViewBag.Cats as IEnumerable<SelectListItem>;
                                                            var elemento3 = elemento2.ToList().Where(e => Convert.ToInt32(e.Value) == item.SelectedCategoryIds.FirstOrDefault()).FirstOrDefault();
                                                            <span>@elemento3.Text</span>
                                                        }

                                                    </td>
                                                    <td style="vertical-align: middle;">
                                                        @if (item.Player_Status)
                                                        {
                                                            <i class="fa-solid fa-thumbs-up text-success"></i>
                                                            @if ((item.PlayerFiles?.Count > 0) || (item.Parents?.Count > 0))
                                                            {
                                                                <i class="fa-solid fa-paperclip"></i>
                                                                
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <i class="fa-solid fa-thumbs-down text-danger"></i>
                                                            @if ((item.PlayerFiles?.Count > 0) || (item.Parents?.Count > 0))
                                                            {
                                                                <i class="fa-solid fa-paperclip"></i>
                                                                
                                                            }
                                                        }
                                                    </td>
                                                    <td style="vertical-align: middle;" class="text-end">
                                                        <div class="btn-group">
                                                            <a asp-action="Edit" class="btn btn-warning" asp-route-id="@item.Player_ID">
                                                                <i class="fa-regular fa-pen-to-square"></i> <span class="d-none d-sm-inline-block">Editar</span>
                                                            </a>

                                                            <a asp-action="@(item.Player_Status ? "DarBaja" : "DarAlta")" class="btn @(item.Player_Status ? "btn-outline-dark" : "btn-outline-primary")" asp-route-id="@item.Player_ID">
                                                                <i class="fa-regular @(item.Player_Status ? "fa-circle-down" : "fa-circle-up")"></i>
                                                                <span class="d-none d-sm-inline-block">@((item.Player_Status ? "Dar Baja" : "Dar Alta"))</span>
                                                            </a>

                                                            @if (User.IsInRole("Admin"))
                                                            {
                                                                <a asp-action="Delete" class="btn btn-danger" asp-route-id="@item.Player_ID">
                                                                    <i class="fa-solid fa-delete-left"></i> <span class="d-none d-sm-inline-block">Eliminar</span>
                                                                </a>
                                                            }
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>

                            }
                            else
                            {
                                <div class="card-body">
                                    <div class="alert alert-warning" role="alert">
                                        <i class="fa-solid fa-triangle-exclamation fa-lg me-2"></i> No hay jugadores activos
                                    </div>
                                </div>
                            }

                        </div>

                        <div class="tab-pane fade p-2 my-1" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab" tabindex="0">
                            @if (Model.Count(item => !item.Player_Status) > 0)
                            {

                                @Html.Partial("_ListPlayers")

                            }
                            else
                            {
                                <div class="card-body">
                                    <div class="alert alert-warning" role="alert">
                                        <i class="fa-solid fa-triangle-exclamation fa-lg me-2"></i>  No hay jugadores inactivos
                                    </div>

                                </div>
                            }

                        </div>

                    </div>

                </div>
            </div>
        </div>
   </div>
       

    <partial name="_Notifications">
</div>

@section Scripts {

    <script type="text/javascript">
        $(document).ready(function () {

            $('#tblPlayersActivos').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.12.1/i18n/es-MX.json"
                },
                "aLengthMenu": [
                    [8, 15,25, 50, 100, 200, -1],
                    [8, 15,25, 50, 100, 200, "Todos"]
                ],
                dom: 'Bfrtip',
                
                buttons: [
                    'pageLength',
                    //columnas
                    {
                        extend: 'colvis',
                        text: 'Columnas',
                        className: 'btn-export-colvis',

                    },
                    //excel
                    {
                        extend: 'excelHtml5',
                        text: 'Exportar Excel',
                        filename: 'Jugadores',
                        title: 'Lista de Jugadores',
                        exportOptions: {
                            columns: [1, 2, 3, 4,5,6]
                        },
                        className: 'btn-exportar-excel',

                    },
                    //pdf
                    {
                        extend: 'pdfHtml5',
                        text: 'Exportar PDF',
                        filename: 'Jugadores',
                        title: 'Lista de Jugadores',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6]
                        },
                        className: 'btn-exportar-pdf',
                    },
                    //print
                    {
                        extend: 'print',
                        title: 'Lista de Jugadores',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6]
                        },
                        className: 'btn-light'

                    }, 
                ]
            })



            $('#tblPlayersInactivos').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.12.1/i18n/es-MX.json"
                },
                "aLengthMenu": [
                    [8, 15, 25, 50, 100, 200, -1],
                    [8, 15, 25, 50, 100, 200, "Todos"]
                ],
                dom: 'Bfrtip',

                buttons: [
                    'pageLength',
                    //columnas
                    {
                        extend: 'colvis',
                        text: 'Columnas',
                        className: 'btn-export-colvis',

                    },
                    //excel
                    {
                        extend: 'excelHtml5',
                        text: 'Exportar Excel',
                        filename: 'Jugadores',
                        title: 'Lista de Jugadores',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6]
                        },
                        className: 'btn-exportar-excel',

                    },
                    //pdf
                    {
                        extend: 'pdfHtml5',
                        text: 'Exportar PDF',
                        filename: 'Jugadores',
                        title: 'Lista de Jugadores',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6]
                        },
                        className: 'btn-exportar-pdf',
                    },
                    //print
                    {
                        extend: 'print',
                        title: 'Lista de Jugadores',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6]
                        },
                        className: 'btn-light'

                    },
                ]
            })



        })


    </script>

  

}